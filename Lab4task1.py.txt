from sklearn.naive_bayes import GaussianNB

from sklearn.metrics import confusion_matrix, accuracy_score

from sklearn.model_selection import train_test_split


weather=["Sunny","Sunny","Overcast","Rainy","Rainy","Rainy","Overcast","Sunny","Sunny","Rainy","Sunny","Overcast","Overcast","Rainy"]

le = preprocessing.LabelEncoder()

weather_encoded=le.fit_transform(weather)

temperature = ["Hot", "Hot", "Hot", "Mild", "Cool", "Cool", "Cool", "Mild", "Cool", "Mild", "Mild", "Mild", "Hot", "Mild"]

temperature_encoded=le.fit_transform(temperature)

play = ["No", "No", "Yes", "Yes", "Yes", "No", "Yes", "No", "Yes", "Yes", "Yes", "Yes", "Yes", "No"]

play_encoded=le.fit_transform(play)

features=list(zip(weather_encoded,temperature_encoded,play_encoded))


from sklearn.model_selection import train_test_split

features_train, features_test,label_train,label_test=train_test_split(features, play_encoded, test_size=0.2, random_state=42)

model = GaussianNB()

model.fit(features_train, label_train)

predicted = model.predict(features_test)

print("Prediction:", predicted)

conf_mat = confusion_matrix(label_test, predicted)

print("Confusion Matrix:")

print(conf_mat)
accuracy = accuracy_score(label_test, predicted)

print("Accuracy:", accuracy)